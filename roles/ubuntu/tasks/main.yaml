- name: Configure Kernel Modules and Sysctl Settings
  become: true
  block:
    - name: Get controlplane IP
      ansible.builtin.set_fact:
        controlplane_ip: "{{ hostvars['controlplane']['ansible_default_ipv4']['address'] }}"

    - name: Configure UFW for Kubernetes node
      community.general.ufw:
        rule: "{{ ufw.rule | default('allow') }}"
        state: "{{ ufw.state | default('enabled') }}"
        port: '{{ ufw.port }}'
        proto: '{{ ufw.protocol | lower }}'
        comment: "{{ ufw.comment | default('') }}"
      loop: "{{ hostvars[inventory_hostname]['required_ports'] }}"
      loop_control:
        loop_var: ufw

    - name: Disable swap to optimize kernel settings
      ansible.builtin.command: swapoff -a
      when: ansible_facts.swaptotal_mb > 0
      changed_when: swapoff_result.rc == 0 and ansible_facts.swaptotal_mb > 0
      register: swapoff_result

    - name: Create module conf if it does not exist
      ansible.builtin.copy:
        src: files/module.conf
        dest: "{{ ubuntu_module_conf_path }}"
        force: false
        owner: root
        group: root
        mode: '0644'
      register: create_module_conf

    - name: Reflect modules to kernel
      ansible.builtin.command: "modprobe {{ module_name }}"
      loop: "{{ ubuntu_modules }}"
      loop_control:
        loop_var: module_name
      register: reflect_modules
      when:
        - create_module_conf is changed
        - modules is defined

    - name: Create sysctl conf if it does not exist
      ansible.builtin.copy:
        src: files/sysctl.conf
        dest: "{{ ubuntu_sysctl_conf_path }}"
        force: false
        owner: root
        group: root
        mode: '0644'
      register: create_sysctl_conf

    - name: Reload sysctl settings
      ansible.builtin.command: sysctl --system
      register: reload_sysctl
      when: create_sysctl_conf is changed
      changed_when: reload_sysctl.rc == 0
